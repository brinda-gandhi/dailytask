2) Difference betweeen HTTP1 and HTTP 2

HTTP2 Vs. HTTP1 is not a debate at all. HTTP2 is much faster and more reliable than HTTP1. 
HTTP1 loads a single request for every TCP connection, while HTTP2 avoids network delay by using multiplexing.

HTTP is a network delay sensitive protocol in the sense that if there is less network delay, then the page loads faster. 
However, an impressive increase in network bandwidth only slightly improves page load time. 
This is key to understanding the differences in performance efficiencies between the different versions of HTTP.
Back in the day when people used dial up modems web pages were simple and it was the actual data transfer between the server and the client that contributed towards the largest chunk of the page load time. 
Today the actual downloading of resources from server takes a negligible portion of the total page load time due to the tremendous increase in bandwidth availability. 
It is the time taken to establish the TCP connection and making requests that impacts performance. 
It was initially recommended to use only two connections per hostname but today most browsers use six connections per hostname. 
Http vs http2 in terms of performance it is important to note that a lot of performance optimizations adopted by HTTP/1.1 introduced complexities in terms of developmental efforts as well as network congestion that HTTP/2 attempts to address.

3)Write a blog about objects and its internal representation in Javascript

An object, is a reference data type. Variables that are assigned a reference value are given a reference or a pointer to that value.
That reference or pointer points to the location in memory where the object is stored.
The variables don’t actually store the value.
Objects in JavaScript may be defined as an unordered collection of related data, of primitive or reference types, in the form of “key: value” pairs. 
These keys can be variables or functions and are called properties and methods, respectively, in the context of an object.

One of easiest way to create a javascript object is object literal
let bike = {name: 'SuperSport', maker:'Ducati', engine:'937cc'};

Create JavaScript Object with Constructor
Constructor is nothing but a function and with help of new keyword, constructor function allows to create multiple objects of same flavor 

function Vehicle(name, maker) {
this.name = name;
this.maker = maker;
}
let car1 = new Vehicle(’Fiesta’, 'Ford’);
let car2 = new Vehicle(’Santa Fe’, 'Hyundai’)
console.log(car1.name); //Output: Fiesta
console.log(car2.name); //Output: Santa Fe

Using the JavaScript Keyword new
The following example also creates a new JavaScript object with four properties:

Example

var person = new Object();
person.firstName = “John”;
person.lastName = “Doe”;
person.age = 50;
person.eyeColor = “blue”;



